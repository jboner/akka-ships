//////////////////////////////////////
// 1. Scala Actors
//////////////////////////////////////

* Starting point. No lab.

//////////////////////////////////////
// 2. Akka Actors Lab
//////////////////////////////////////

* Rewrite lab 1 as Akka Actors.
* Change base Actor class
* Implement the receive callback.

//////////////////////////////////////
// 3. Supervisor Lab
//////////////////////////////////////

* Turn EventProcessor into a Supervisor that supervises all Ships.
* Define 'faultHandler' (for EventProcessor) and 'lifeCycleConfig' (for Ship).
* Add message handler for the Sink message.

//////////////////////////////////////
// 4. Remote Lab
//////////////////////////////////////

* Add startup of a RemoteServer to the EventProcessor startup.
* Add handler for the NewShip message which should 
  * create, start and link the Ship
  * pass on the message to the Ship for initialization
  * reply with the new Ship 

//////////////////////////////////////
// 5. REST Lab
//////////////////////////////////////

* Write the EventProcessorFacade.
* Should respond to all the GET messages in the ScalaDoc and pass them on as 
  messages of type Tuple3[String, String, String] to the EventProcessor.

//////////////////////////////////////
// 6. Persistence Lab
//////////////////////////////////////

* Add STM management.
* Add persistence for the eventLog.
* Add replay of the eventLog (after Akka Kernel restart).
